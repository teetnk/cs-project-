import os
import qrcode
import barcode
from barcode.writer import ImageWriter
from datetime import datetime

def generate_codes(building, floor, machine_start, machine_count, save_path, code_type="qr", latitude=None, longitude=None):
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á QR Code ‡∏´‡∏£‡∏∑‡∏≠ Barcode 1D (Code128) ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏û‡∏¥‡∏Å‡∏±‡∏î
    :param building: ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏∂‡∏Å (2 ‡∏´‡∏•‡∏±‡∏Å)
    :param floor: ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ä‡∏±‡πâ‡∏ô (2 ‡∏´‡∏•‡∏±‡∏Å)
    :param machine_start: ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (3 ‡∏´‡∏•‡∏±‡∏Å)
    :param machine_count: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
    :param save_path: ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    :param code_type: ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á ("qr" ‡∏´‡∏£‡∏∑‡∏≠ "barcode")
    :param latitude: ‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
    :param longitude: ‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡πâ‡∏≠‡∏ô
    """
    os.makedirs(save_path, exist_ok=True)  # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    building_code = f"{building:02d}"  # ‚úÖ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏ä‡πà‡∏ô 26)
    floor_code = f"{floor:02d}"  # ‚úÖ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏ä‡πà‡∏ô 05)

    for i in range(machine_count):
        machine_code = f"{machine_start + i:03d}"  # ‚úÖ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏ä‡πà‡∏ô 001, 002)
        unique_id = f"{building_code}{floor_code}{machine_code}"  # ‚úÖ ‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô "260501"
        timestamp = datetime.now().strftime("%Y%m%d%H%M%S")  # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Timestamp
        data_string = f"Building: {building}, Floor: {floor}, Machine: {machine_code}, Lat: {latitude}, Long: {longitude}"  # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏¥‡∏Å‡∏±‡∏î

        # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
        filename = os.path.join(save_path, f"{unique_id}.png")

        if code_type == "qr":
            qr = qrcode.QRCode(
                version=1,
                error_correction=qrcode.constants.ERROR_CORRECT_L,
                box_size=10,
                border=4
            )
            qr.add_data(data_string)
            qr.make(fit=True)
            img = qr.make_image(fill="black", back_color="white")
            img.save(filename)
        
        elif code_type == "barcode":
            EAN = barcode.get_barcode_class('code128')
            ean = EAN(unique_id, writer=ImageWriter())
            ean.save(filename)
        
        print(f"üì§ Saved {code_type.upper()} at: {filename}")

# ‚úÖ ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
building = int(input("Enter Building No. (2 digits) : "))  # üîπ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏∂‡∏Å ‡πÄ‡∏ä‡πà‡∏ô 26
floor = int(input("Enter Floor No. (2 digits) : "))  # üîπ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ä‡∏±‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 5
machine_start = int(input("Enter Start Machine No. (3 digits) : "))  # üîπ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 1
machine_count = int(input("Number of Machines: "))  # üîπ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô 10
code_type = input("Type of code (qr/barcode): ").strip().lower()  # üîπ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å QR Code ‡∏´‡∏£‡∏∑‡∏≠ Barcode
latitude = input("Enter Latitude: ")  # üîπ ‡∏£‡∏±‡∏ö‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î
longitude = input("Enter Longitude: ")  # üîπ ‡∏£‡∏±‡∏ö‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î

# ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
generate_codes(building, floor, machine_start, machine_count, "./codes", code_type, latitude, longitude)
